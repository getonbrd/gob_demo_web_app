import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { useRouter } from 'next/router'
import { useState, useEffect } from 'react'

const host = 'https://www.getonbrd.com';

const loginUrl = `${host}/webpros/login?api_mode=true&app_url=https://gobapp.juan-carlosc174.repl.co`

const currentTokens = {token: null, refreshToken: null}

const updateTokenAndretry = async (response, callback) => {
  if(response.status === 401) {
    const tokenResponse = await fetch(`${host}/api/v0/auth_tokens`, {
      method:'POST',
      headers:{
        'Accept': 'application/json',
      'Content-Type': 'application/json'
      },
      body: JSON.stringify({refresh_token: currentTokens.refreshToken})
    })
    const newTokens = await tokenResponse.json()
  
    currentTokens.token = newTokens.token
    currentTokens.refreshToken = newTokens.refresh_token
    return await callback()
  }
}

const getJobs = async () => {
  const authHeaders = new Headers()
  authHeaders.append('Authorization',`Bearer ${currentTokens.token}`)
  const response = await fetch(`${host}/api/v0/matching_jobs`,{headers: authHeaders})
  if(response.ok) {
    const myJobs = await response.json()
    return myJobs
  }
  return await updateTokenAndretry(response, getJobs)
}

export default function Home(props) {
  const router = useRouter()
  const [jobList, setJobList] = useState([])
  const getMyJob = async () => {
    const response = await getJobs()
    return response.data
    
  }

  useEffect(async () => {
    if(router.query.token){
      const token = router.query.token
      const refreshToken = router.query.refresh_token
      currentTokens.token = token
      currentTokens.refreshToken = refreshToken
      const jobs = await getMyJob()
      setJobList(jobs)
    }
  
  },[router.query.token])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to GoB Demo App!
        </h1>
        {!router.query.token && <a href={loginUrl}>Login in</a>}
        {router.query.token && <h3>My Jobs</h3>}
        {jobList.map(job => {
          return <div key={job.id}>
           <div>{job.attributes.title}</div>
          </div>
        })}
      </main>

      <footer className={styles.footer}>
        <a
          href="www.getonbrd.com"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by Vercel
            and Replit and GetOnBoard
        </a>
      </footer>
    </div>
  )
}
